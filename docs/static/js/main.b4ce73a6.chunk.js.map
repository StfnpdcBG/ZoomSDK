{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","sdkKey","meetingNumber","leaveUrl","userName","passWord","className","onClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","document","getElementById","style","display","init","success","console","log","join","userEmail","tk","error","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2PAKAA,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SA+ELC,MA7Ef,WAGE,IAEIC,EAAS,uCACTC,EAAgB,aAEhBC,EAAW,wBACXC,EAAW,QAEXC,EAAW,SAuDf,OACE,qBAAKC,UAAU,MAAf,SACE,iCACE,+DAEA,wBAAQC,QAtDd,SAAsBC,GACpBA,EAAEC,iBAEFC,MAjBsB,wBAiBG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBb,cAAeA,EACfc,KAlBK,MAoBNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GAOR,IAAsBC,IANLD,EAASC,UAOxBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDhC,UAAQiC,KAAK,CACXvB,SAAUA,EACVwB,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZlC,UAAQqC,KAAK,CACXT,UAAWA,EACXnB,cAAeA,EACfE,SAAUA,EACVH,OAAQA,EACR8B,UAtCQ,GAuCR1B,SAAUA,EACV2B,GAnCc,GAoCdL,QAAS,SAACA,GACRC,QAAQC,IAAIF,IAEdM,MAAO,SAACA,GACNL,QAAQC,IAAII,OAKlBA,MAAO,SAACA,GACNL,QAAQC,IAAII,SA/BbC,OAAM,SAAAD,GACPL,QAAQK,MAAMA,OAwCZ,gCCxEOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.b4ce73a6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './App.css';\r\nimport { ZoomMtg } from '@zoomus/websdk';\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.5.0/lib', '/av');\r\n\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\n// loads language files, also passes any error messages to the ui\r\nZoomMtg.i18n.load('en-US');\r\nZoomMtg.i18n.reload('en-US');\r\n\r\nfunction App() {\r\n\r\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\r\n  var signatureEndpoint = 'http://localhost:4000'\r\n  // This Sample App has been updated to use SDK App type credentials https://marketplace.zoom.us/docs/guides/build/sdk-app\r\n  var sdkKey = 'vXg4kmQnzvSvjHMwCmOcdXSjqmxP6BowVafd'\r\n  var meetingNumber = '5102691402'\r\n  var role = 0\r\n  var leaveUrl = 'http://localhost:3000'\r\n  var userName = 'Guest'\r\n  var userEmail = ''\r\n  var passWord = 'Fn92c1'\r\n  // pass in the registrant's token if your meeting or webinar requires registration. More info here:\r\n  // Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/meetings#join-registered\r\n  // Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/webinars#join-registered\r\n  var registrantToken = ''\r\n\r\n  function getSignature(e) {\r\n    e.preventDefault();\r\n\r\n    fetch(signatureEndpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        meetingNumber: meetingNumber,\r\n        role: role\r\n      })\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      startMeeting(response.signature)\r\n    }).catch(error => {\r\n      console.error(error)\r\n    })\r\n  }\r\n\r\n  function startMeeting(signature) {\r\n    document.getElementById('zmmtg-root').style.display = 'block'\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {\r\n        console.log(success)\r\n\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingNumber,\r\n          userName: userName,\r\n          sdkKey: sdkKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          tk: registrantToken,\r\n          success: (success) => {\r\n            console.log(success)\r\n          },\r\n          error: (error) => {\r\n            console.log(error)\r\n          }\r\n        })\r\n\r\n      },\r\n      error: (error) => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        <h1>Zoom Meeting SDK Sample React</h1>\r\n\r\n        <button onClick={getSignature}>Join Meeting</button>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}