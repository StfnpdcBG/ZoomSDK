{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","sdkKey","leaveUrl","useState","meetingNumber","setMeetingNumber","userName","setUserName","userEmail","setUserEmail","passWord","setPassWord","className","href","src","process","alt","width","height","style","marginRight","id","onSubmit","event","console","log","preventDefault","marginTop","marginLeft","type","name","maxLength","placeholder","onChange","target","value","required","onClick","e","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","document","getElementById","display","init","success","join","tk","error","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.513d71be.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport { ZoomMtg } from '@zoomus/websdk';\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.5.0/lib', '/av');\r\n\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\n// loads language files, also passes any error messages to the ui\r\nZoomMtg.i18n.load('en-US');\r\nZoomMtg.i18n.reload('en-US');\r\n\r\nfunction App() {\r\n\r\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\r\n  const signatureEndpoint = 'http://localhost:4000'\r\n  // This Sample App has been updated to use SDK App type credentials https://marketplace.zoom.us/docs/guides/build/sdk-app\r\n  const sdkKey = 'vXg4kmQnzvSvjHMwCmOcdXSjqmxP6BowVafd'\r\n  const leaveUrl = 'http://localhost:3000'\r\n  const role = 0\r\n\r\n  var [meetingNumber, setMeetingNumber] = useState('');\r\n  var [userName, setUserName] = useState('Guest')\r\n  var [userEmail, setUserEmail] = useState('')\r\n  var [passWord, setPassWord] = useState('')\r\n  // pass in the registrant's token if your meeting or webinar requires registration. More info here:\r\n  // Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/meetings#join-registered\r\n  // Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/webinars#join-registered\r\n  var registrantToken = ''\r\n\r\n  const handleSubmit = event => {\r\n    console.log('handleSubmit ran');\r\n    event.preventDefault(); // 👈️ prevent page refresh\r\n\r\n    // 👇️ display input values here\r\n    console.log('meetingNumber 👉️', meetingNumber);\r\n    console.log('userName 👉️', userName);\r\n    console.log('passWord 👉️', passWord);\r\n    console.log('userEmail 👉️', userEmail);\r\n\r\n\r\n    // 👇️ clear all input values in the form\r\n    setMeetingNumber('');\r\n  }\r\n\r\n  function getSignature(e) {\r\n    e.preventDefault();\r\n\r\n    fetch(signatureEndpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        meetingNumber: meetingNumber,\r\n        role: role\r\n      })\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      startMeeting(response.signature)\r\n      }).catch(error => {\r\n      console.error(error)\r\n    })\r\n  }\r\n\r\n  function startMeeting(signature) {\r\n    document.getElementById('zmmtg-root').style.display = 'block'\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {\r\n        console.log(success)\r\n\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingNumber,\r\n          userName: userName,\r\n          sdkKey: sdkKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          tk: registrantToken,\r\n          success: (success) => {\r\n            console.log(success)\r\n          },\r\n          error: (error) => {\r\n            console.log(error)\r\n          }\r\n        })\r\n\r\n      },\r\n      error: (error) => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n\r\n   \r\n\r\n  return (\r\n    <div className='App'>\r\n      <main>\r\n             <div className=\"navbar-header\">\r\n                <a className=\"navbar-brand\" href=\"/choose-platform\">BeTalent Zoom Meeting</a>\r\n            </div>\r\n            <div className=\"form-bg\">\r\n            <img src={process.env.PUBLIC_URL + '/logo_betalent.svg'}  alt='betalent' width=\"300\" height=\"100\" style={{marginRight: 400}}/>\r\n\r\n            <div id=\"navbar\" className=\"websdktest\">\r\n                <form className=\"navbar-form navbar\" id=\"meeting_form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\" style={{marginTop: 200, marginLeft:200}}>\r\n                        <input type=\"text\" name=\"display_name\" id=\"display_name\" maxLength=\"100\"\r\n                            placeholder=\"Name\" className=\"form-control\" \r\n                            onChange={event => setUserName(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"meeting_number\" id=\"meeting_number\" maxLength=\"200\"\r\n                            style={{width:150, marginTop: 200}} placeholder=\"Meeting Number\" className=\"form-control\" \r\n                            onChange={event => setMeetingNumber(event.target.value)} required\r\n                            /> </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"meeting_pwd\" id=\"meeting_pwd\" style={{width:150, marginTop: 200}}\r\n                            maxLength=\"32\" placeholder=\"Meeting Password\" className=\"form-control\" \r\n                            onChange={event => setPassWord(event.target.value)} required/> </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"meeting_email\" id=\"meeting_email\" style={{width:150, marginTop: 200}}\r\n                            maxLength=\"32\" placeholder=\"Email option\" className=\"form-control\"\r\n                            onChange={event => setUserEmail(event.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group\" style={{marginTop: 200}}>\r\n                        <select id=\"meeting_china\" className=\"sdk-select\">\r\n                            <option value={0}>Global</option>\r\n                            <option value={1}>China</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{marginTop: 200, marginRight:0}}>\r\n                        <select id=\"meeting_lang\" className=\"sdk-select\">\r\n                            <option value=\"en-US\">English</option>\r\n                            <option value=\"de-DE\">German Deutsch</option>\r\n                            <option value=\"es-ES\">Spanish Español</option>\r\n                            <option value=\"fr-FR\">French Français</option>\r\n                            <option value=\"jp-JP\">Japanese 日本語</option>\r\n                            <option value=\"pt-PT\">Portuguese Portuguese</option>\r\n                            <option value=\"ru-RU\">Russian Русский</option>\r\n                            <option value=\"zh-CN\">Chinese 简体中文</option>\r\n                            <option value=\"zh-TW\">Chinese 繁体中文</option>\r\n                            <option value=\"ko-KO\">Korean 한국어</option>\r\n                            <option value=\"vi-VN\">Vietnamese Tiếng Việt</option>\r\n                            <option value=\"it-IT\">Italian italiano</option>\r\n                        </select> \r\n                     </div>\r\n                    <div className='button-div' style={{marginRight:820}}>\r\n                        <button type='submit' onClick={getSignature} className=\"button-inizia-ora-big\">Join Meeting</button>\r\n                        <button type=\"submit\" className=\"button-inizia-ora-big\" id=\"clear_all\">Clear</button>\r\n                    </div>\r\n                 </form>\r\n            </div>\r\n          </div>    \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}